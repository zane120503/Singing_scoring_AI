#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test script ƒë·ªÉ ki·ªÉm tra key detection cho file vocals MP3
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

import logging
from pathlib import Path

# Setup logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_vocals_key_detection():
    """Test key detection cho file vocals"""
    logger.info("=== TEST VOCALS KEY DETECTION ===")
    
    try:
        # Import key detector
        from src.ai.advanced_key_detector import AdvancedKeyDetector
        
        # Kh·ªüi t·∫°o key detector
        key_detector = AdvancedKeyDetector()
        
        # ƒê∆∞·ªùng d·∫´n file vocals
        vocals_file = "D:\\singing scoring AI\\Audio_separator_ui\\clean_song_output\\a782fca021e952ec38_mdx\\input_Vocals_DeReverb_converted.mp3"
        
        if not os.path.exists(vocals_file):
            logger.error(f"File vocals kh√¥ng t·ªìn t·∫°i: {vocals_file}")
            return False
        
        logger.info(f"Testing vocals file: {vocals_file}")
        
        # Test key detection
        logger.info("ƒêang th·ª±c hi·ªán key detection...")
        result = key_detector.detect_key(vocals_file, "vocals")
        
        if result:
            logger.info(f"‚úÖ K·∫øt qu·∫£ key detection:")
            logger.info(f"   Key: {result['key']} {result['scale']}")
            logger.info(f"   Confidence: {result['confidence']:.3f}")
            logger.info(f"   Method: {result['method']}")
            
            # So s√°nh v·ªõi key c·ªßa beat nh·∫°c (C major)
            beat_key = "C major"
            vocals_key = f"{result['key']} {result['scale']}"
            
            logger.info(f"\nüìä So s√°nh:")
            logger.info(f"   Beat nh·∫°c: {beat_key}")
            logger.info(f"   Gi·ªçng h√°t: {vocals_key}")
            
            if result['key'] == 'C' and result['scale'] == 'major':
                logger.info("‚úÖ CH√çNH X√ÅC: Key detection cho vocals ƒë√£ ƒë√∫ng!")
                return True
            else:
                logger.warning(f"‚ùå CH∆ØA CH√çNH X√ÅC: Key detection cho vocals v·∫´n sai (mong ƒë·ª£i C major)")
                return False
        else:
            logger.error("‚ùå Key detection th·∫•t b·∫°i")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå L·ªói trong qu√° tr√¨nh test: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_vocals_key_detection()
    if success:
        print("\nüéâ TEST TH√ÄNH C√îNG!")
    else:
        print("\n‚ö†Ô∏è TEST C·∫¶N C·∫¢I THI·ªÜN!")
